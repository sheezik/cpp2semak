/*
Lab2_24 OOП 2
Лабораторная работа №2 по предмету
Практикум по программированию, 1 курс ПИ - Э, 2 семестр

—— Задача : Публикации. Каждая публикация некоторого сайта имеет заголовок и текст. Публикации бывают трех типов: новости (дата, тема), статьи (автор),
объявления (дата начала,дата окончания, цена). Выдать список публикаций.

                                ------------------------------------


Требуется реализовать систему из двух (или трёх, возможно и более) классов,
отражающую отношение «род-вид» между сущностями, с использованием
принципов наследования и полиморфизма.
Одна сущность (базовый класс) должна представлять более общее понятие,
другие (порожденные классы) – более конкретные понятия. В базовом классе
объявляется и реализуется общая для всех функциональность, в порождённых
классах – функциональность, расширяющая или заменяющая общую.
Необходимо использовать как минимум один виртуальный метод, реализуемый в порождённых классах по-своему. Также возможно базовый класс сделать
абстрактным, если виртуальный метод не может быть в нём реализован.


Автор: студент группы ПИ - 1э Кондаков А.А.
Дата готовности : 17.04.2023 года
тест :
*/
#include <iostream>
#include <locale.h>
#include "Post.h"
#include "News.h"
#include "Article.h"
#include "Ads.h"

using namespace std;

int main()
{
	setlocale(LC_ALL, "Ru");
	const int size = 3;
	Post* posts[size];
	



	News* post1 = new News("Аутист спасает жизни","Смотрите новый сериал Good Doctor только на Netflix", "16.06.2002", "Сериалы");
	posts[0] = post1;
	cout << *post1 << endl << endl;
	Article* post2 = new Article("Студентам режут стипендию", "По результатам зимней сессии количество студентов отличников вырасло по сравнению с прошлым годом, ректорату пришлось принять меры...", "Аноним");
	posts[1] = post2;
	cout << *post2 << endl << endl;
	Ads* post3 = new Ads("Новые видеокарты", "Продам новые видеокарты в наличии 50 шт rx580 (не майнились, честно)", "12.06.2023","16.06.2023", 10000);
	posts[2] = post3;
	cout << *post3 << endl << endl;
	int maxLength = 0;
	for (int i = 1; i < size; i++) {
		if (posts[i]->getText().length() > posts[i - 1]->getText().length())
			maxLength = i;
	}
	cout << "Самая большая публикация  : " << posts[maxLength]->getHeader() << endl << endl;

	
	

}